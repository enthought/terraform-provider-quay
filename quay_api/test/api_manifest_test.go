/*
Quay Frontend

Testing ManifestAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package quay_api

import (
	"context"
	openapiclient "github.com/enthought/terraform-provider-quay/quay_api"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_quay_api_ManifestAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ManifestAPIService AddManifestLabel", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var manifestref string
		var repository string

		httpRes, err := apiClient.ManifestAPI.AddManifestLabel(context.Background(), manifestref, repository).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ManifestAPIService DeleteManifestLabel", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var manifestref string
		var repository string
		var labelid string

		httpRes, err := apiClient.ManifestAPI.DeleteManifestLabel(context.Background(), manifestref, repository, labelid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ManifestAPIService GetManifestLabel", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var manifestref string
		var repository string
		var labelid string

		httpRes, err := apiClient.ManifestAPI.GetManifestLabel(context.Background(), manifestref, repository, labelid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ManifestAPIService GetRepoManifest", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var manifestref string
		var repository string

		httpRes, err := apiClient.ManifestAPI.GetRepoManifest(context.Background(), manifestref, repository).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ManifestAPIService ListManifestLabels", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var manifestref string
		var repository string

		httpRes, err := apiClient.ManifestAPI.ListManifestLabels(context.Background(), manifestref, repository).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
