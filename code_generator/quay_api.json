{
  "openapi": "3.0.1",
  "info": {
    "contact": {
      "email": "admin@example.com"
    },
    "description": "This API allows you to perform many of the operations required to work with Quay repositories, users, and organizations.",
    "termsOfService": "",
    "title": "Quay Frontend",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://quay.example.com/"
    }
  ],
  "tags": [
    {
      "description": "Manages app specific tokens for the current user.",
      "name": "appspecifictokens"
    },
    {
      "description": "Create, list, cancel and get status/logs of repository builds.",
      "name": "build"
    },
    {
      "description": "API discovery information.",
      "name": "discovery"
    },
    {
      "description": "Error details API.",
      "name": "error"
    },
    {
      "description": "Messages API.",
      "name": "globalmessages"
    },
    {
      "description": "Access usage logs for organizations or repositories.",
      "name": "logs"
    },
    {
      "description": "Manage the manifests of a repository.",
      "name": "manifest"
    },
    {
      "description": "",
      "name": "namespacequota"
    },
    {
      "description": "Manage organizations, members and OAuth applications.",
      "name": "organization"
    },
    {
      "description": "Manage repository permissions.",
      "name": "permission"
    },
    {
      "description": "Manage default permissions added to repositories.",
      "name": "prototype"
    },
    {
      "description": "List, create and manage repositories.",
      "name": "repository"
    },
    {
      "description": "List, create and manage repository events/notifications.",
      "name": "repositorynotification"
    },
    {
      "description": "Manage repository access tokens (DEPRECATED).",
      "name": "repotoken"
    },
    {
      "description": "Manage user and organization robot accounts.",
      "name": "robot"
    },
    {
      "description": "Conduct searches against all registry context.",
      "name": "search"
    },
    {
      "description": "Superuser API.",
      "name": "superuser"
    },
    {
      "description": "Manage the tags of a repository.",
      "name": "tag"
    },
    {
      "description": "Create, list and manage an organization's teams.",
      "name": "team"
    },
    {
      "description": "Create, list and manage build triggers.",
      "name": "trigger"
    },
    {
      "description": "Manage the current user.",
      "name": "user"
    },
    {
      "description": "",
      "name": "userfiles"
    }
  ],
  "paths": {
    "/api/v1/user/apptoken": {
      "get": {
        "description": "Lists the app specific tokens for the user.",
        "operationId": "listAppTokens",
        "parameters": [
          {
            "description": "If true, only returns those tokens expiring soon",
            "in": "query",
            "name": "expiring",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "appspecifictokens"
        ]
      },
      "post": {
        "description": "Create a new app specific token for user.",
        "operationId": "createAppToken",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NewToken"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "appspecifictokens"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.appspecifictokens.AppTokens",
      "x-path": "/api/v1/user/apptoken",
      "x-tag": "appspecifictokens"
    },
    "/api/v1/user/apptoken/{token_uuid}": {
      "delete": {
        "description": "Revokes a specific app token for the user.",
        "operationId": "revokeAppToken",
        "parameters": [
          {
            "description": "The uuid of the app specific token",
            "in": "path",
            "name": "token_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "appspecifictokens"
        ]
      },
      "get": {
        "description": "Returns a specific app token for the user.",
        "operationId": "getAppToken",
        "parameters": [
          {
            "description": "The uuid of the app specific token",
            "in": "path",
            "name": "token_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "appspecifictokens"
        ]
      },
      "x-name": "endpoints.api.appspecifictokens.AppToken",
      "x-path": "/api/v1/user/apptoken/{token_uuid}",
      "x-tag": "appspecifictokens"
    },
    "/api/v1/repository/{repository}/build/": {
      "get": {
        "description": "Get the list of repository builds.",
        "operationId": "getRepoBuilds",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Returns all builds since the given unix timecode",
            "in": "query",
            "name": "since",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of builds to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "build"
        ]
      },
      "post": {
        "description": "Request that a repository be built and pushed from the specified input.",
        "operationId": "requestRepoBuild",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryBuildRequest"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:write"
            ]
          }
        ],
        "tags": [
          "build"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.build.RepositoryBuildList",
      "x-path": "/api/v1/repository/{repository}/build/",
      "x-tag": "build"
    },
    "/api/v1/repository/{repository}/build/{build_uuid}": {
      "delete": {
        "description": "Cancels a repository build.",
        "operationId": "cancelRepoBuild",
        "parameters": [
          {
            "description": "The UUID of the build",
            "in": "path",
            "name": "build_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "build"
        ]
      },
      "get": {
        "description": "Returns information about a build.",
        "operationId": "getRepoBuild",
        "parameters": [
          {
            "description": "The UUID of the build",
            "in": "path",
            "name": "build_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "build"
        ]
      },
      "x-name": "endpoints.api.build.RepositoryBuildResource",
      "x-path": "/api/v1/repository/{repository}/build/{build_uuid}",
      "x-tag": "build"
    },
    "/api/v1/repository/{repository}/build/{build_uuid}/status": {
      "get": {
        "description": "Return the status for the builds specified by the build uuids.",
        "operationId": "getRepoBuildStatus",
        "parameters": [
          {
            "description": "The UUID of the build",
            "in": "path",
            "name": "build_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "build"
        ]
      },
      "x-name": "endpoints.api.build.RepositoryBuildStatus",
      "x-path": "/api/v1/repository/{repository}/build/{build_uuid}/status",
      "x-tag": "build"
    },
    "/api/v1/repository/{repository}/build/{build_uuid}/logs": {
      "get": {
        "description": "Return the build logs for the build specified by the build uuid.",
        "operationId": "getRepoBuildLogs",
        "parameters": [
          {
            "description": "The UUID of the build",
            "in": "path",
            "name": "build_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "build"
        ]
      },
      "x-name": "endpoints.api.build.RepositoryBuildLogs",
      "x-path": "/api/v1/repository/{repository}/build/{build_uuid}/logs",
      "x-tag": "build"
    },
    "/api/v1/discovery": {
      "get": {
        "description": "List all of the API endpoints available in the swagger API format.",
        "operationId": "discovery",
        "parameters": [
          {
            "description": "Whether to include internal APIs.",
            "in": "query",
            "name": "internal",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "discovery"
        ]
      },
      "x-name": "endpoints.api.discovery.DiscoveryResource",
      "x-path": "/api/v1/discovery",
      "x-tag": "discovery"
    },
    "/api/v1/error/{error_type}": {
      "get": {
        "description": "Get a detailed description of the error.",
        "operationId": "getErrorDescription",
        "parameters": [
          {
            "description": "The error code identifying the type of error.",
            "in": "path",
            "name": "error_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorDescription"
                }
              }
            },
            "description": "Successful invocation"
          }
        },
        "tags": [
          "error"
        ]
      },
      "x-name": "endpoints.api.error.Error",
      "x-path": "/api/v1/error/{error_type}",
      "x-tag": "error"
    },
    "/api/v1/messages": {
      "get": {
        "description": "Return a super users messages.",
        "operationId": "getGlobalMessages",
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "globalmessages"
        ]
      },
      "post": {
        "description": "Create a message.",
        "operationId": "createGlobalMessage",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessage"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "globalmessages"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.globalmessages.GlobalUserMessages",
      "x-path": "/api/v1/messages",
      "x-tag": "globalmessages"
    },
    "/api/v1/message/{uuid}": {
      "delete": {
        "description": "Delete a message.",
        "operationId": "deleteGlobalMessage",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "globalmessages"
        ]
      },
      "x-name": "endpoints.api.globalmessages.GlobalUserMessage",
      "x-path": "/api/v1/message/{uuid}",
      "x-tag": "globalmessages"
    },
    "/api/v1/repository/{repository}/logs": {
      "get": {
        "description": "List the logs for the specified repository.",
        "operationId": "listRepoLogs",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page token for the next page",
            "in": "query",
            "name": "next_page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Latest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "endtime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Earliest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "starttime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "logs"
        ]
      },
      "x-name": "endpoints.api.logs.RepositoryLogs",
      "x-path": "/api/v1/repository/{repository}/logs",
      "x-tag": "logs"
    },
    "/api/v1/user/logs": {
      "get": {
        "description": "List the logs for the current user.",
        "operationId": "listUserLogs",
        "parameters": [
          {
            "description": "The page token for the next page",
            "in": "query",
            "name": "next_page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Username for which to filter logs.",
            "in": "query",
            "name": "performer",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Latest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "endtime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Earliest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "starttime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "logs"
        ]
      },
      "x-name": "endpoints.api.logs.UserLogs",
      "x-path": "/api/v1/user/logs",
      "x-tag": "logs"
    },
    "/api/v1/organization/{orgname}/logs": {
      "get": {
        "description": "List the logs for the specified organization.",
        "operationId": "listOrgLogs",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page token for the next page",
            "in": "query",
            "name": "next_page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Username for which to filter logs.",
            "in": "query",
            "name": "performer",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Latest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "endtime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Earliest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "starttime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "logs"
        ]
      },
      "x-name": "endpoints.api.logs.OrgLogs",
      "x-path": "/api/v1/organization/{orgname}/logs",
      "x-tag": "logs"
    },
    "/api/v1/repository/{repository}/aggregatelogs": {
      "get": {
        "description": "Returns the aggregated logs for the specified repository.",
        "operationId": "getAggregateRepoLogs",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Latest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "endtime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Earliest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "starttime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "logs"
        ]
      },
      "x-name": "endpoints.api.logs.RepositoryAggregateLogs",
      "x-path": "/api/v1/repository/{repository}/aggregatelogs",
      "x-tag": "logs"
    },
    "/api/v1/user/aggregatelogs": {
      "get": {
        "description": "Returns the aggregated logs for the current user.",
        "operationId": "getAggregateUserLogs",
        "parameters": [
          {
            "description": "Username for which to filter logs.",
            "in": "query",
            "name": "performer",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Latest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "endtime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Earliest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "starttime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "logs"
        ]
      },
      "x-name": "endpoints.api.logs.UserAggregateLogs",
      "x-path": "/api/v1/user/aggregatelogs",
      "x-tag": "logs"
    },
    "/api/v1/organization/{orgname}/aggregatelogs": {
      "get": {
        "description": "Gets the aggregated logs for the specified organization.",
        "operationId": "getAggregateOrgLogs",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Username for which to filter logs.",
            "in": "query",
            "name": "performer",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Latest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "endtime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Earliest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "starttime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "logs"
        ]
      },
      "x-name": "endpoints.api.logs.OrgAggregateLogs",
      "x-path": "/api/v1/organization/{orgname}/aggregatelogs",
      "x-tag": "logs"
    },
    "/api/v1/repository/{repository}/exportlogs": {
      "post": {
        "description": "Queues an export of the logs for the specified repository.",
        "operationId": "exportRepoLogs",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Latest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "endtime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Earliest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "starttime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/ExportLogs"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "logs"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.logs.ExportRepositoryLogs",
      "x-path": "/api/v1/repository/{repository}/exportlogs",
      "x-tag": "logs"
    },
    "/api/v1/user/exportlogs": {
      "post": {
        "description": "Returns the aggregated logs for the current user.",
        "operationId": "exportUserLogs",
        "parameters": [
          {
            "description": "Latest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "endtime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Earliest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "starttime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/ExportLogs"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "logs"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.logs.ExportUserLogs",
      "x-path": "/api/v1/user/exportlogs",
      "x-tag": "logs"
    },
    "/api/v1/organization/{orgname}/exportlogs": {
      "post": {
        "description": "Exports the logs for the specified organization.",
        "operationId": "exportOrgLogs",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Latest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "endtime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Earliest time for logs. Format: \"%m/%d/%Y\" in UTC.",
            "in": "query",
            "name": "starttime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/ExportLogs"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "logs"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.logs.ExportOrgLogs",
      "x-path": "/api/v1/organization/{orgname}/exportlogs",
      "x-tag": "logs"
    },
    "/api/v1/repository/{repository}/manifest/{manifestref}": {
      "get": {
        "operationId": "getRepoManifest",
        "parameters": [
          {
            "description": "The digest of the manifest",
            "in": "path",
            "name": "manifestref",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "manifest"
        ]
      },
      "x-name": "endpoints.api.manifest.RepositoryManifest",
      "x-path": "/api/v1/repository/{repository}/manifest/{manifestref}",
      "x-tag": "manifest"
    },
    "/api/v1/repository/{repository}/manifest/{manifestref}/labels": {
      "get": {
        "operationId": "listManifestLabels",
        "parameters": [
          {
            "description": "The digest of the manifest",
            "in": "path",
            "name": "manifestref",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If specified, only labels matching the given prefix will be returned",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "manifest"
        ]
      },
      "post": {
        "description": "Adds a new label into the tag manifest.",
        "operationId": "addManifestLabel",
        "parameters": [
          {
            "description": "The digest of the manifest",
            "in": "path",
            "name": "manifestref",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/AddLabel"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:write"
            ]
          }
        ],
        "tags": [
          "manifest"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.manifest.RepositoryManifestLabels",
      "x-path": "/api/v1/repository/{repository}/manifest/{manifestref}/labels",
      "x-tag": "manifest"
    },
    "/api/v1/repository/{repository}/manifest/{manifestref}/labels/{labelid}": {
      "delete": {
        "description": "Deletes an existing label from a manifest.",
        "operationId": "deleteManifestLabel",
        "parameters": [
          {
            "description": "The digest of the manifest",
            "in": "path",
            "name": "manifestref",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the label",
            "in": "path",
            "name": "labelid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:write"
            ]
          }
        ],
        "tags": [
          "manifest"
        ]
      },
      "get": {
        "description": "Retrieves the label with the specific ID under the manifest.",
        "operationId": "getManifestLabel",
        "parameters": [
          {
            "description": "The digest of the manifest",
            "in": "path",
            "name": "manifestref",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the label",
            "in": "path",
            "name": "labelid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "manifest"
        ]
      },
      "x-name": "endpoints.api.manifest.ManageRepositoryManifestLabel",
      "x-path": "/api/v1/repository/{repository}/manifest/{manifestref}/labels/{labelid}",
      "x-tag": "manifest"
    },
    "/api/v1/organization/{orgname}/quota": {
      "get": {
        "operationId": "listOrganizationQuota",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "namespacequota"
        ]
      },
      "post": {
        "description": "Create a new organization quota.",
        "operationId": "createOrganizationQuota",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NewOrgQuota"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "namespacequota"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.namespacequota.OrganizationQuotaList",
      "x-path": "/api/v1/organization/{orgname}/quota",
      "x-tag": "namespacequota"
    },
    "/api/v1/organization/{orgname}/quota/{quota_id}": {
      "delete": {
        "operationId": "deleteOrganizationQuota",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "namespacequota"
        ]
      },
      "get": {
        "operationId": "getOrganizationQuota",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "namespacequota"
        ]
      },
      "put": {
        "operationId": "changeOrganizationQuota",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrgQuota"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "namespacequota"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.namespacequota.OrganizationQuota",
      "x-path": "/api/v1/organization/{orgname}/quota/{quota_id}",
      "x-tag": "namespacequota"
    },
    "/api/v1/organization/{orgname}/quota/{quota_id}/limit": {
      "get": {
        "operationId": "listOrganizationQuotaLimit",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "namespacequota"
        ]
      },
      "post": {
        "operationId": "createOrganizationQuotaLimit",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NewOrgQuotaLimit"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "namespacequota"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.namespacequota.OrganizationQuotaLimitList",
      "x-path": "/api/v1/organization/{orgname}/quota/{quota_id}/limit",
      "x-tag": "namespacequota"
    },
    "/api/v1/organization/{orgname}/quota/{quota_id}/limit/{limit_id}": {
      "delete": {
        "operationId": "deleteOrganizationQuotaLimit",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "limit_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "namespacequota"
        ]
      },
      "get": {
        "operationId": "getOrganizationQuotaLimit",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "limit_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "namespacequota"
        ]
      },
      "put": {
        "operationId": "changeOrganizationQuotaLimit",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "limit_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrgQuotaLimit"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "namespacequota"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.namespacequota.OrganizationQuotaLimit",
      "x-path": "/api/v1/organization/{orgname}/quota/{quota_id}/limit/{limit_id}",
      "x-tag": "namespacequota"
    },
    "/api/v1/user/quota": {
      "get": {
        "operationId": "listUserQuota",
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "namespacequota"
        ]
      },
      "x-name": "endpoints.api.namespacequota.UserQuotaList",
      "x-path": "/api/v1/user/quota",
      "x-tag": "namespacequota"
    },
    "/api/v1/user/quota/{quota_id}": {
      "get": {
        "operationId": "getUserQuota",
        "parameters": [
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "namespacequota"
        ]
      },
      "x-name": "endpoints.api.namespacequota.UserQuota",
      "x-path": "/api/v1/user/quota/{quota_id}",
      "x-tag": "namespacequota"
    },
    "/api/v1/user/quota/{quota_id}/limit": {
      "get": {
        "operationId": "listUserQuotaLimit",
        "parameters": [
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "namespacequota"
        ]
      },
      "x-name": "endpoints.api.namespacequota.UserQuotaLimitList",
      "x-path": "/api/v1/user/quota/{quota_id}/limit",
      "x-tag": "namespacequota"
    },
    "/api/v1/user/quota/{quota_id}/limit/{limit_id}": {
      "get": {
        "operationId": "getUserQuotaLimit",
        "parameters": [
          {
            "in": "path",
            "name": "limit_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "namespacequota"
        ]
      },
      "x-name": "endpoints.api.namespacequota.UserQuotaLimit",
      "x-path": "/api/v1/user/quota/{quota_id}/limit/{limit_id}",
      "x-tag": "namespacequota"
    },
    "/api/v1/organization/": {
      "post": {
        "description": "Create a new organization.",
        "operationId": "createOrganization",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NewOrg"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.organization.OrganizationList",
      "x-path": "/api/v1/organization/",
      "x-tag": "organization"
    },
    "/api/v1/organization/{orgname}": {
      "delete": {
        "description": "Deletes the specified organization.",
        "operationId": "deleteAdminedOrganization",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ]
      },
      "get": {
        "description": "Get the details for the specified organization.",
        "operationId": "getOrganization",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "organization"
        ]
      },
      "put": {
        "description": "Change the details for the specified organization.",
        "operationId": "changeOrganizationDetails",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrg"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.organization.Organization",
      "x-path": "/api/v1/organization/{orgname}",
      "x-tag": "organization"
    },
    "/api/v1/organization/{orgname}/collaborators": {
      "get": {
        "description": "List outside collaborators of the specified organization.",
        "operationId": "getOrganizationCollaborators",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ]
      },
      "x-name": "endpoints.api.organization.OrganizationCollaboratorList",
      "x-path": "/api/v1/organization/{orgname}/collaborators",
      "x-tag": "organization"
    },
    "/api/v1/organization/{orgname}/members": {
      "get": {
        "description": "List the human members of the specified organization.",
        "operationId": "getOrganizationMembers",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ]
      },
      "x-name": "endpoints.api.organization.OrganizationMemberList",
      "x-path": "/api/v1/organization/{orgname}/members",
      "x-tag": "organization"
    },
    "/api/v1/organization/{orgname}/members/{membername}": {
      "delete": {
        "description": "Removes a member from an organization, revoking all its repository priviledges and removing\n        it from all teams in the organization.",
        "operationId": "removeOrganizationMember",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The username of the organization member",
            "in": "path",
            "name": "membername",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ]
      },
      "get": {
        "description": "Retrieves the details of a member of the organization.",
        "operationId": "getOrganizationMember",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The username of the organization member",
            "in": "path",
            "name": "membername",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ]
      },
      "x-name": "endpoints.api.organization.OrganizationMember",
      "x-path": "/api/v1/organization/{orgname}/members/{membername}",
      "x-tag": "organization"
    },
    "/api/v1/app/{client_id}": {
      "get": {
        "description": "Get information on the specified application.",
        "operationId": "getApplicationInformation",
        "parameters": [
          {
            "description": "The OAuth client ID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "organization"
        ]
      },
      "x-name": "endpoints.api.organization.ApplicationInformation",
      "x-path": "/api/v1/app/{client_id}",
      "x-tag": "organization"
    },
    "/api/v1/organization/{orgname}/applications": {
      "get": {
        "description": "List the applications for the specified organization.",
        "operationId": "getOrganizationApplications",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ]
      },
      "post": {
        "description": "Creates a new application under this organization.",
        "operationId": "createOrganizationApplication",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NewApp"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.organization.OrganizationApplications",
      "x-path": "/api/v1/organization/{orgname}/applications",
      "x-tag": "organization"
    },
    "/api/v1/organization/{orgname}/applications/{client_id}": {
      "delete": {
        "description": "Deletes the application under this organization.",
        "operationId": "deleteOrganizationApplication",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The OAuth client ID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ]
      },
      "get": {
        "description": "Retrieves the application with the specified client_id under the specified organization.",
        "operationId": "getOrganizationApplication",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The OAuth client ID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ]
      },
      "put": {
        "description": "Updates an application under this organization.",
        "operationId": "updateOrganizationApplication",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The OAuth client ID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApp"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "organization"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.organization.OrganizationApplicationResource",
      "x-path": "/api/v1/organization/{orgname}/applications/{client_id}",
      "x-tag": "organization"
    },
    "/api/v1/repository/{repository}/permissions/team/": {
      "get": {
        "description": "List all team permission.",
        "operationId": "listRepoTeamPermissions",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "permission"
        ]
      },
      "x-name": "endpoints.api.permission.RepositoryTeamPermissionList",
      "x-path": "/api/v1/repository/{repository}/permissions/team/",
      "x-tag": "permission"
    },
    "/api/v1/repository/{repository}/permissions/user/": {
      "get": {
        "description": "List all user permissions.",
        "operationId": "listRepoUserPermissions",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "permission"
        ]
      },
      "x-name": "endpoints.api.permission.RepositoryUserPermissionList",
      "x-path": "/api/v1/repository/{repository}/permissions/user/",
      "x-tag": "permission"
    },
    "/api/v1/repository/{repository}/permissions/user/{username}/transitive": {
      "get": {
        "description": "Get the fetch the permission for the specified user.",
        "operationId": "getUserTransitivePermission",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The username of the user to which the permissions apply",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "permission"
        ]
      },
      "x-name": "endpoints.api.permission.RepositoryUserTransitivePermission",
      "x-path": "/api/v1/repository/{repository}/permissions/user/{username}/transitive",
      "x-tag": "permission"
    },
    "/api/v1/repository/{repository}/permissions/user/{username}": {
      "delete": {
        "description": "Delete the permission for the user.",
        "operationId": "deleteUserPermissions",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The username of the user to which the permission applies",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "permission"
        ]
      },
      "get": {
        "description": "Get the permission for the specified user.",
        "operationId": "getUserPermissions",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The username of the user to which the permission applies",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "permission"
        ]
      },
      "put": {
        "description": "Update the perimssions for an existing repository.",
        "operationId": "changeUserPermissions",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The username of the user to which the permission applies",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UserPermission"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "permission"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.permission.RepositoryUserPermission",
      "x-path": "/api/v1/repository/{repository}/permissions/user/{username}",
      "x-tag": "permission"
    },
    "/api/v1/repository/{repository}/permissions/team/{teamname}": {
      "delete": {
        "description": "Delete the permission for the specified team.",
        "operationId": "deleteTeamPermissions",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the team to which the permission applies",
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "permission"
        ]
      },
      "get": {
        "description": "Fetch the permission for the specified team.",
        "operationId": "getTeamPermissions",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the team to which the permission applies",
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "permission"
        ]
      },
      "put": {
        "description": "Update the existing team permission.",
        "operationId": "changeTeamPermissions",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the team to which the permission applies",
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/TeamPermission"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "permission"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.permission.RepositoryTeamPermission",
      "x-path": "/api/v1/repository/{repository}/permissions/team/{teamname}",
      "x-tag": "permission"
    },
    "/api/v1/organization/{orgname}/prototypes": {
      "get": {
        "description": "List the existing prototypes for this organization.",
        "operationId": "getOrganizationPrototypePermissions",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "prototype"
        ]
      },
      "post": {
        "description": "Create a new permission prototype.",
        "operationId": "createOrganizationPrototypePermission",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NewPrototype"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "prototype"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.prototype.PermissionPrototypeList",
      "x-path": "/api/v1/organization/{orgname}/prototypes",
      "x-tag": "prototype"
    },
    "/api/v1/organization/{orgname}/prototypes/{prototypeid}": {
      "delete": {
        "description": "Delete an existing permission prototype.",
        "operationId": "deleteOrganizationPrototypePermission",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the prototype",
            "in": "path",
            "name": "prototypeid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "prototype"
        ]
      },
      "put": {
        "description": "Update the role of an existing permission prototype.",
        "operationId": "updateOrganizationPrototypePermission",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the prototype",
            "in": "path",
            "name": "prototypeid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/PrototypeUpdate"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "prototype"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.prototype.PermissionPrototype",
      "x-path": "/api/v1/organization/{orgname}/prototypes/{prototypeid}",
      "x-tag": "prototype"
    },
    "/api/v1/repository": {
      "get": {
        "description": "Fetch the list of repositories visible to the current user under a variety of situations.",
        "operationId": "listRepos",
        "parameters": [
          {
            "description": "The page token for the next page",
            "in": "query",
            "name": "next_page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The kind of repositories to return",
            "in": "query",
            "name": "repo_kind",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to include the repository's popularity metric.",
            "in": "query",
            "name": "popularity",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to include when the repository was last modified.",
            "in": "query",
            "name": "last_modified",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Adds any repositories visible to the user by virtue of being public",
            "in": "query",
            "name": "public",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters the repositories returned to those starred by the user",
            "in": "query",
            "name": "starred",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters the repositories returned to this namespace",
            "in": "query",
            "name": "namespace",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "repository"
        ]
      },
      "post": {
        "description": "Create a new repository.",
        "operationId": "createRepo",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NewRepo"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:create"
            ]
          }
        ],
        "tags": [
          "repository"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.repository.RepositoryList",
      "x-path": "/api/v1/repository",
      "x-tag": "repository"
    },
    "/api/v1/repository/{repository}": {
      "delete": {
        "description": "Delete a repository.",
        "operationId": "deleteRepository",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repository"
        ]
      },
      "get": {
        "description": "Fetch the specified repository.",
        "operationId": "getRepo",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to include repository tags",
            "in": "query",
            "name": "includeTags",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to include action statistics",
            "in": "query",
            "name": "includeStats",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "repository"
        ]
      },
      "put": {
        "description": "Update the description in the specified repository.",
        "operationId": "updateRepo",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/RepoUpdate"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:write"
            ]
          }
        ],
        "tags": [
          "repository"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.repository.Repository",
      "x-path": "/api/v1/repository/{repository}",
      "x-tag": "repository"
    },
    "/api/v1/repository/{repository}/changevisibility": {
      "post": {
        "description": "Change the visibility of a repository.",
        "operationId": "changeRepoVisibility",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/ChangeVisibility"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repository"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.repository.RepositoryVisibility",
      "x-path": "/api/v1/repository/{repository}/changevisibility",
      "x-tag": "repository"
    },
    "/api/v1/repository/{repository}/changetrust": {
      "x-name": "endpoints.api.repository.RepositoryTrust",
      "x-path": "/api/v1/repository/{repository}/changetrust",
      "x-tag": "repository"
    },
    "/api/v1/repository/{repository}/notification/": {
      "get": {
        "description": "List the notifications for the specified repository.",
        "operationId": "listRepoNotifications",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repositorynotification"
        ]
      },
      "post": {
        "operationId": "createRepoNotification",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreateRequest"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repositorynotification"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.repositorynotification.RepositoryNotificationList",
      "x-path": "/api/v1/repository/{repository}/notification/",
      "x-tag": "repositorynotification"
    },
    "/api/v1/repository/{repository}/notification/{uuid}": {
      "delete": {
        "description": "Deletes the specified notification.",
        "operationId": "deleteRepoNotification",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The UUID of the notification",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repositorynotification"
        ]
      },
      "get": {
        "description": "Get information for the specified notification.",
        "operationId": "getRepoNotification",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The UUID of the notification",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repositorynotification"
        ]
      },
      "post": {
        "description": "Resets repository notification to 0 failures.",
        "operationId": "resetRepositoryNotificationFailures",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The UUID of the notification",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repositorynotification"
        ]
      },
      "x-name": "endpoints.api.repositorynotification.RepositoryNotification",
      "x-path": "/api/v1/repository/{repository}/notification/{uuid}",
      "x-tag": "repositorynotification"
    },
    "/api/v1/repository/{repository}/notification/{uuid}/test": {
      "post": {
        "description": "Queues a test notification for this repository.",
        "operationId": "testRepoNotification",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The UUID of the notification",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repositorynotification"
        ]
      },
      "x-name": "endpoints.api.repositorynotification.TestRepositoryNotification",
      "x-path": "/api/v1/repository/{repository}/notification/{uuid}/test",
      "x-tag": "repositorynotification"
    },
    "/api/v1/repository/{repository}/tokens/": {
      "get": {
        "description": "List the tokens for the specified repository.",
        "operationId": "listRepoTokens",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repotoken"
        ]
      },
      "post": {
        "description": "Create a new repository token.",
        "operationId": "createToken",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NewToken"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repotoken"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.repotoken.RepositoryTokenList",
      "x-path": "/api/v1/repository/{repository}/tokens/",
      "x-tag": "repotoken"
    },
    "/api/v1/repository/{repository}/tokens/{code}": {
      "delete": {
        "description": "Delete the repository token.",
        "operationId": "deleteToken",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The token code",
            "in": "path",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repotoken"
        ]
      },
      "get": {
        "description": "Fetch the specified repository token information.",
        "operationId": "getTokens",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The token code",
            "in": "path",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repotoken"
        ]
      },
      "put": {
        "description": "Update the permissions for the specified repository token.",
        "operationId": "changeToken",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The token code",
            "in": "path",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/TokenPermission"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "repotoken"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.repotoken.RepositoryToken",
      "x-path": "/api/v1/repository/{repository}/tokens/{code}",
      "x-tag": "repotoken"
    },
    "/api/v1/user/robots": {
      "get": {
        "description": "List the available robots for the user.",
        "operationId": "getUserRobots",
        "parameters": [
          {
            "description": "If specified, the number of robots to return.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "If false, the robot's token is not returned.",
            "in": "query",
            "name": "token",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to include repositories and teams in which the robots have permission.",
            "in": "query",
            "name": "permissions",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ]
      },
      "x-name": "endpoints.api.robot.UserRobotList",
      "x-path": "/api/v1/user/robots",
      "x-tag": "robot"
    },
    "/api/v1/user/robots/{robot_shortname}": {
      "delete": {
        "description": "Delete an existing robot.",
        "operationId": "deleteUserRobot",
        "parameters": [
          {
            "description": "The short name for the robot, without any user or organization prefix",
            "in": "path",
            "name": "robot_shortname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ]
      },
      "get": {
        "description": "Returns the user's robot with the specified name.",
        "operationId": "getUserRobot",
        "parameters": [
          {
            "description": "The short name for the robot, without any user or organization prefix",
            "in": "path",
            "name": "robot_shortname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ]
      },
      "put": {
        "description": "Create a new user robot with the specified name.",
        "operationId": "createUserRobot",
        "parameters": [
          {
            "description": "The short name for the robot, without any user or organization prefix",
            "in": "path",
            "name": "robot_shortname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CreateRobot"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.robot.UserRobot",
      "x-path": "/api/v1/user/robots/{robot_shortname}",
      "x-tag": "robot"
    },
    "/api/v1/organization/{orgname}/robots": {
      "get": {
        "description": "List the organization's robots.",
        "operationId": "getOrgRobots",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If specified, the number of robots to return.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "If false, the robot's token is not returned.",
            "in": "query",
            "name": "token",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to include repostories and teams in which the robots have permission.",
            "in": "query",
            "name": "permissions",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ]
      },
      "x-name": "endpoints.api.robot.OrgRobotList",
      "x-path": "/api/v1/organization/{orgname}/robots",
      "x-tag": "robot"
    },
    "/api/v1/organization/{orgname}/robots/{robot_shortname}": {
      "delete": {
        "description": "Delete an existing organization robot.",
        "operationId": "deleteOrgRobot",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The short name for the robot, without any user or organization prefix",
            "in": "path",
            "name": "robot_shortname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ]
      },
      "get": {
        "description": "Returns the organization's robot with the specified name.",
        "operationId": "getOrgRobot",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The short name for the robot, without any user or organization prefix",
            "in": "path",
            "name": "robot_shortname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ]
      },
      "put": {
        "description": "Create a new robot in the organization.",
        "operationId": "createOrgRobot",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The short name for the robot, without any user or organization prefix",
            "in": "path",
            "name": "robot_shortname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CreateRobot"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.robot.OrgRobot",
      "x-path": "/api/v1/organization/{orgname}/robots/{robot_shortname}",
      "x-tag": "robot"
    },
    "/api/v1/user/robots/{robot_shortname}/permissions": {
      "get": {
        "description": "Returns the list of repository permissions for the user's robot.",
        "operationId": "getUserRobotPermissions",
        "parameters": [
          {
            "description": "The short name for the robot, without any user or organization prefix",
            "in": "path",
            "name": "robot_shortname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ]
      },
      "x-name": "endpoints.api.robot.UserRobotPermissions",
      "x-path": "/api/v1/user/robots/{robot_shortname}/permissions",
      "x-tag": "robot"
    },
    "/api/v1/organization/{orgname}/robots/{robot_shortname}/permissions": {
      "get": {
        "description": "Returns the list of repository permissions for the org's robot.",
        "operationId": "getOrgRobotPermissions",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The short name for the robot, without any user or organization prefix",
            "in": "path",
            "name": "robot_shortname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ]
      },
      "x-name": "endpoints.api.robot.OrgRobotPermissions",
      "x-path": "/api/v1/organization/{orgname}/robots/{robot_shortname}/permissions",
      "x-tag": "robot"
    },
    "/api/v1/user/robots/{robot_shortname}/regenerate": {
      "post": {
        "description": "Regenerates the token for a user's robot.",
        "operationId": "regenerateUserRobotToken",
        "parameters": [
          {
            "description": "The short name for the robot, without any user or organization prefix",
            "in": "path",
            "name": "robot_shortname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ]
      },
      "x-name": "endpoints.api.robot.RegenerateUserRobot",
      "x-path": "/api/v1/user/robots/{robot_shortname}/regenerate",
      "x-tag": "robot"
    },
    "/api/v1/organization/{orgname}/robots/{robot_shortname}/regenerate": {
      "post": {
        "description": "Regenerates the token for an organization robot.",
        "operationId": "regenerateOrgRobotToken",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The short name for the robot, without any user or organization prefix",
            "in": "path",
            "name": "robot_shortname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "robot"
        ]
      },
      "x-name": "endpoints.api.robot.RegenerateOrgRobot",
      "x-path": "/api/v1/organization/{orgname}/robots/{robot_shortname}/regenerate",
      "x-tag": "robot"
    },
    "/api/v1/entities/{prefix}": {
      "get": {
        "description": "Get a list of entities that match the specified prefix.",
        "operationId": "getMatchingEntities",
        "parameters": [
          {
            "in": "path",
            "name": "prefix",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to include orgs names.",
            "in": "query",
            "name": "includeOrgs",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to include team names.",
            "in": "query",
            "name": "includeTeams",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Namespace to use when querying for org entities.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "search"
        ]
      },
      "x-name": "endpoints.api.search.EntitySearch",
      "x-path": "/api/v1/entities/{prefix}",
      "x-tag": "search"
    },
    "/api/v1/find/all": {
      "get": {
        "description": "Get a list of entities and resources that match the specified query.",
        "operationId": "conductSearch",
        "parameters": [
          {
            "description": "The search query.",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "search"
        ]
      },
      "x-name": "endpoints.api.search.ConductSearch",
      "x-path": "/api/v1/find/all",
      "x-tag": "search"
    },
    "/api/v1/find/repositories": {
      "get": {
        "description": "Get a list of apps and repositories that match the specified query.",
        "operationId": "conductRepoSearch",
        "parameters": [
          {
            "description": "Whether to include usage metadata",
            "in": "query",
            "name": "includeUsage",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The page.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The search query.",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "search"
        ]
      },
      "x-name": "endpoints.api.search.ConductRepositorySearch",
      "x-path": "/api/v1/find/repositories",
      "x-tag": "search"
    },
    "/api/v1/superuser/logs": {
      "get": {
        "description": "List the usage logs for the current system.",
        "operationId": "listAllLogs",
        "parameters": [
          {
            "description": "The page token for the next page",
            "in": "query",
            "name": "next_page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page number for the logs",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Latest time to which to get logs (%m/%d/%Y %Z)",
            "in": "query",
            "name": "endtime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Earliest time from which to get logs (%m/%d/%Y %Z)",
            "in": "query",
            "name": "starttime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "x-name": "endpoints.api.superuser.SuperUserLogs",
      "x-path": "/api/v1/superuser/logs",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/users/{namespace}/quota": {
      "get": {
        "operationId": "listUserQuotaSuperUser",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "post": {
        "operationId": "createUserQuotaSuperUser",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NewNamespaceQuota"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.superuser.SuperUserUserQuotaList",
      "x-path": "/api/v1/superuser/users/{namespace}/quota",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/organization/{namespace}/quota": {
      "get": {
        "operationId": "listOrganizationQuotaSuperUser",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "post": {
        "operationId": "createOrganizationQuotaSuperUser",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NewNamespaceQuota"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.superuser.SuperUserUserQuotaList",
      "x-path": "/api/v1/superuser/organization/{namespace}/quota",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/users/{namespace}/quota/{quota_id}": {
      "delete": {
        "operationId": "deleteUserQuotaSuperUser",
        "parameters": [
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "put": {
        "operationId": "changeUserQuotaSuperUser",
        "parameters": [
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNamespaceQuota"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.superuser.SuperUserUserQuota",
      "x-path": "/api/v1/superuser/users/{namespace}/quota/{quota_id}",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/organization/{namespace}/quota/{quota_id}": {
      "delete": {
        "operationId": "deleteOrganizationQuotaSuperUser",
        "parameters": [
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "put": {
        "operationId": "changeOrganizationQuotaSuperUser",
        "parameters": [
          {
            "in": "path",
            "name": "quota_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNamespaceQuota"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.superuser.SuperUserUserQuota",
      "x-path": "/api/v1/superuser/organization/{namespace}/quota/{quota_id}",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/users/": {
      "get": {
        "description": "Returns a list of all users in the system.",
        "operationId": "listAllUsers",
        "parameters": [
          {
            "description": "The page token for the next page",
            "in": "query",
            "name": "next_page",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit to the number of results to return per page. Max 100.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "If false, only enabled users will be returned.",
            "in": "query",
            "name": "disabled",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "post": {
        "description": "Creates a new user.",
        "operationId": "createInstallUser",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstallUser"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.superuser.SuperUserList",
      "x-path": "/api/v1/superuser/users/",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/organizations/{name}": {
      "delete": {
        "description": "Deletes the specified organization.",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "description": "The name of the organizaton being managed",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "put": {
        "description": "Updates information about the specified user.",
        "operationId": "changeOrganization",
        "parameters": [
          {
            "description": "The name of the organizaton being managed",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrg"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.superuser.SuperUserOrganizationManagement",
      "x-path": "/api/v1/superuser/organizations/{name}",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/keys": {
      "get": {
        "operationId": "listServiceKeys",
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "post": {
        "operationId": "createServiceKey",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceKey"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.superuser.SuperUserServiceKeyManagement",
      "x-path": "/api/v1/superuser/keys",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/keys/{kid}": {
      "delete": {
        "operationId": "deleteServiceKey",
        "parameters": [
          {
            "description": "The unique identifier for a service key",
            "in": "path",
            "name": "kid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "get": {
        "operationId": "getServiceKey",
        "parameters": [
          {
            "description": "The unique identifier for a service key",
            "in": "path",
            "name": "kid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "put": {
        "operationId": "updateServiceKey",
        "parameters": [
          {
            "description": "The unique identifier for a service key",
            "in": "path",
            "name": "kid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/PutServiceKey"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.superuser.SuperUserServiceKey",
      "x-path": "/api/v1/superuser/keys/{kid}",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/approvedkeys/{kid}": {
      "post": {
        "operationId": "approveServiceKey",
        "parameters": [
          {
            "description": "The unique identifier for a service key",
            "in": "path",
            "name": "kid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/ApproveServiceKey"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.superuser.SuperUserServiceKeyApproval",
      "x-path": "/api/v1/superuser/approvedkeys/{kid}",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/{build_uuid}/logs": {
      "get": {
        "description": "Return the build logs for the build specified by the build uuid.",
        "operationId": "getRepoBuildLogsSuperUser",
        "parameters": [
          {
            "description": "The UUID of the build",
            "in": "path",
            "name": "build_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "x-name": "endpoints.api.superuser.SuperUserRepositoryBuildLogs",
      "x-path": "/api/v1/superuser/{build_uuid}/logs",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/{build_uuid}/status": {
      "get": {
        "description": "Return the status for the builds specified by the build uuids.",
        "operationId": "getRepoBuildStatusSuperUser",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The UUID of the build",
            "in": "path",
            "name": "build_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "x-name": "endpoints.api.superuser.SuperUserRepositoryBuildStatus",
      "x-path": "/api/v1/superuser/{build_uuid}/status",
      "x-tag": "superuser"
    },
    "/api/v1/superuser/{build_uuid}/build": {
      "get": {
        "description": "Returns information about a build.",
        "operationId": "getRepoBuildSuperUser",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The UUID of the build",
            "in": "path",
            "name": "build_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          }
        ],
        "tags": [
          "superuser"
        ]
      },
      "x-name": "endpoints.api.superuser.SuperUserRepositoryBuildResource",
      "x-path": "/api/v1/superuser/{build_uuid}/build",
      "x-tag": "superuser"
    },
    "/api/v1/repository/{repository}/tag/": {
      "get": {
        "operationId": "listRepoTags",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter to only active tags.",
            "in": "query",
            "name": "onlyActiveTags",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Page index for the results. Default 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Limit to the number of results to return per page. Max 100.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Syntax: <op>:<name> Filters the tag names based on the operation.<op> can be 'like' or 'eq'.",
            "in": "query",
            "name": "filter_tag_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the tags to the specific tag.",
            "in": "query",
            "name": "specificTag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "tag"
        ]
      },
      "x-name": "endpoints.api.tag.ListRepositoryTags",
      "x-path": "/api/v1/repository/{repository}/tag/",
      "x-tag": "tag"
    },
    "/api/v1/repository/{repository}/tag/{tag}": {
      "delete": {
        "description": "Delete the specified repository tag.",
        "operationId": "deleteFullTag",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the tag",
            "in": "path",
            "name": "tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:write"
            ]
          }
        ],
        "tags": [
          "tag"
        ]
      },
      "put": {
        "description": "Change which image a tag points to or create a new tag.",
        "operationId": "changeTag",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the tag",
            "in": "path",
            "name": "tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/ChangeTag"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:write"
            ]
          }
        ],
        "tags": [
          "tag"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.tag.RepositoryTag",
      "x-path": "/api/v1/repository/{repository}/tag/{tag}",
      "x-tag": "tag"
    },
    "/api/v1/repository/{repository}/tag/{tag}/restore": {
      "post": {
        "description": "Restores a repository tag back to a previous image in the repository.",
        "operationId": "restoreTag",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the tag",
            "in": "path",
            "name": "tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/RestoreTag"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:write"
            ]
          }
        ],
        "tags": [
          "tag"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.tag.RestoreTag",
      "x-path": "/api/v1/repository/{repository}/tag/{tag}/restore",
      "x-tag": "tag"
    },
    "/api/v1/organization/{orgname}/team/{teamname}": {
      "delete": {
        "description": "Delete the specified team.",
        "operationId": "deleteOrganizationTeam",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the team",
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "team"
        ]
      },
      "put": {
        "description": "Update the org-wide permission for the specified team.",
        "operationId": "updateOrganizationTeam",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the team",
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/TeamDescription"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "team"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.team.OrganizationTeam",
      "x-path": "/api/v1/organization/{orgname}/team/{teamname}",
      "x-tag": "team"
    },
    "/api/v1/organization/{orgname}/team/{teamname}/syncing": {
      "delete": {
        "operationId": "disableOrganizationTeamSync",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the team",
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "team"
        ]
      },
      "post": {
        "operationId": "enableOrganizationTeamSync",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the team",
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "team"
        ]
      },
      "x-name": "endpoints.api.team.OrganizationTeamSyncing",
      "x-path": "/api/v1/organization/{orgname}/team/{teamname}/syncing",
      "x-tag": "team"
    },
    "/api/v1/organization/{orgname}/team/{teamname}/members": {
      "get": {
        "description": "Retrieve the list of members for the specified team.",
        "operationId": "getOrganizationTeamMembers",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the team",
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to include pending members",
            "in": "query",
            "name": "includePending",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "team"
        ]
      },
      "x-name": "endpoints.api.team.TeamMemberList",
      "x-path": "/api/v1/organization/{orgname}/team/{teamname}/members",
      "x-tag": "team"
    },
    "/api/v1/organization/{orgname}/team/{teamname}/members/{membername}": {
      "delete": {
        "description": "Delete a member of a team.\n\n        If the user is merely invited to join the team, then the invite is removed instead.",
        "operationId": "deleteOrganizationTeamMember",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The username of the team member",
            "in": "path",
            "name": "membername",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the team",
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "team"
        ]
      },
      "put": {
        "description": "Adds or invites a member to an existing team.",
        "operationId": "updateOrganizationTeamMember",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The username of the team member",
            "in": "path",
            "name": "membername",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the team",
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "team"
        ]
      },
      "x-name": "endpoints.api.team.TeamMember",
      "x-path": "/api/v1/organization/{orgname}/team/{teamname}/members/{membername}",
      "x-tag": "team"
    },
    "/api/v1/organization/{orgname}/team/{teamname}/invite/{email}": {
      "delete": {
        "description": "Delete an invite of an email address to join a team.",
        "operationId": "deleteTeamMemberEmailInvite",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "team"
        ]
      },
      "put": {
        "description": "Invites an email address to an existing team.",
        "operationId": "inviteTeamMemberEmail",
        "parameters": [
          {
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          }
        ],
        "tags": [
          "team"
        ]
      },
      "x-name": "endpoints.api.team.InviteTeamMember",
      "x-path": "/api/v1/organization/{orgname}/team/{teamname}/invite/{email}",
      "x-tag": "team"
    },
    "/api/v1/organization/{orgname}/team/{teamname}/permissions": {
      "get": {
        "description": "Returns the list of repository permissions for the org's team.",
        "operationId": "getOrganizationTeamPermissions",
        "parameters": [
          {
            "description": "The name of the organization",
            "in": "path",
            "name": "orgname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the team",
            "in": "path",
            "name": "teamname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "team"
        ]
      },
      "x-name": "endpoints.api.team.TeamPermissions",
      "x-path": "/api/v1/organization/{orgname}/team/{teamname}/permissions",
      "x-tag": "team"
    },
    "/api/v1/repository/{repository}/trigger/": {
      "get": {
        "description": "List the triggers for the specified repository.",
        "operationId": "listBuildTriggers",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "trigger"
        ]
      },
      "x-name": "endpoints.api.trigger.BuildTriggerList",
      "x-path": "/api/v1/repository/{repository}/trigger/",
      "x-tag": "trigger"
    },
    "/api/v1/repository/{repository}/trigger/{trigger_uuid}": {
      "delete": {
        "description": "Delete the specified build trigger.",
        "operationId": "deleteBuildTrigger",
        "parameters": [
          {
            "description": "The UUID of the build trigger",
            "in": "path",
            "name": "trigger_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "trigger"
        ]
      },
      "get": {
        "description": "Get information for the specified build trigger.",
        "operationId": "getBuildTrigger",
        "parameters": [
          {
            "description": "The UUID of the build trigger",
            "in": "path",
            "name": "trigger_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "trigger"
        ]
      },
      "put": {
        "description": "Updates the specified build trigger.",
        "operationId": "updateBuildTrigger",
        "parameters": [
          {
            "description": "The UUID of the build trigger",
            "in": "path",
            "name": "trigger_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrigger"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "trigger"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.trigger.BuildTrigger",
      "x-path": "/api/v1/repository/{repository}/trigger/{trigger_uuid}",
      "x-tag": "trigger"
    },
    "/api/v1/repository/{repository}/trigger/{trigger_uuid}/activate": {
      "post": {
        "description": "Activate the specified build trigger.",
        "operationId": "activateBuildTrigger",
        "parameters": [
          {
            "description": "The UUID of the build trigger",
            "in": "path",
            "name": "trigger_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/BuildTriggerActivateRequest"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "trigger"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.trigger.BuildTriggerActivate",
      "x-path": "/api/v1/repository/{repository}/trigger/{trigger_uuid}/activate",
      "x-tag": "trigger"
    },
    "/api/v1/repository/{repository}/trigger/{trigger_uuid}/start": {
      "post": {
        "description": "Manually start a build from the specified trigger.",
        "operationId": "manuallyStartBuildTrigger",
        "parameters": [
          {
            "description": "The UUID of the build trigger",
            "in": "path",
            "name": "trigger_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/RunParameters"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "trigger"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.trigger.ActivateBuildTrigger",
      "x-path": "/api/v1/repository/{repository}/trigger/{trigger_uuid}/start",
      "x-tag": "trigger"
    },
    "/api/v1/repository/{repository}/trigger/{trigger_uuid}/builds": {
      "get": {
        "description": "List the builds started by the specified trigger.",
        "operationId": "listTriggerRecentBuilds",
        "parameters": [
          {
            "description": "The UUID of the build trigger",
            "in": "path",
            "name": "trigger_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of builds to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          }
        ],
        "tags": [
          "trigger"
        ]
      },
      "x-name": "endpoints.api.trigger.TriggerBuildList",
      "x-path": "/api/v1/repository/{repository}/trigger/{trigger_uuid}/builds",
      "x-tag": "trigger"
    },
    "/api/v1/user/": {
      "get": {
        "description": "Get user information for the authenticated user.",
        "operationId": "getLoggedInUser",
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserView"
                }
              }
            },
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:read"
            ]
          }
        ],
        "tags": [
          "user"
        ]
      },
      "x-name": "endpoints.api.user.User",
      "x-path": "/api/v1/user/",
      "x-tag": "user"
    },
    "/api/v1/user/starred": {
      "get": {
        "description": "List all starred repositories.",
        "operationId": "listStarredRepos",
        "parameters": [
          {
            "description": "The page token for the next page",
            "in": "query",
            "name": "next_page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "user"
        ]
      },
      "post": {
        "description": "Star a repository.",
        "operationId": "createStar",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NewStarredRepository"
              }
            }
          },
          "description": "Request body contents.",
          "required": true
        },
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "201": {
            "content": {},
            "description": "Successful creation"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "repo:read"
            ]
          }
        ],
        "tags": [
          "user"
        ],
        "x-codegen-request-body-name": "body"
      },
      "x-name": "endpoints.api.user.StarredRepositoryList",
      "x-path": "/api/v1/user/starred",
      "x-tag": "user"
    },
    "/api/v1/user/starred/{repository}": {
      "delete": {
        "description": "Removes a star from a repository.",
        "operationId": "deleteStar",
        "parameters": [
          {
            "description": "The full path of the repository. e.g. namespace/name",
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "204": {
            "content": {},
            "description": "Deleted"
          }
        },
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          }
        ],
        "tags": [
          "user"
        ]
      },
      "x-name": "endpoints.api.user.StarredRepository",
      "x-path": "/api/v1/user/starred/{repository}",
      "x-tag": "user"
    },
    "/api/v1/users/{username}": {
      "get": {
        "description": "Get user information for the specified user.",
        "operationId": "getUserInformation",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Session required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Unauthorized access"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Not found"
          },
          "200": {
            "content": {},
            "description": "Successful invocation"
          }
        },
        "tags": [
          "user"
        ]
      },
      "x-name": "endpoints.api.user.Users",
      "x-path": "/api/v1/users/{username}",
      "x-tag": "user"
    },
    "/userfiles/{file_id}": {
      "x-name": "data.userfiles.UserfilesHandlers",
      "x-path": "/userfiles/{file_id}",
      "x-tag": "userfiles"
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "properties": {
          "status": {
            "description": "Status code of the response.",
            "type": "integer"
          },
          "type": {
            "description": "Reference to the type of the error.",
            "type": "string"
          },
          "detail": {
            "description": "Details about the specific instance of the error.",
            "type": "string"
          },
          "title": {
            "description": "Unique error code to identify the type of error.",
            "type": "string"
          },
          "error_message": {
            "description": "Deprecated; alias for detail",
            "type": "string"
          },
          "error_type": {
            "description": "Deprecated; alias for detail",
            "type": "string"
          }
        },
        "required": [
          "status",
          "title",
          "type"
        ],
        "type": "object"
      },
      "NewToken": {
        "description": "Description of a new token.",
        "properties": {
          "friendlyName": {
            "description": "Friendly name to help identify the token",
            "type": "string"
          }
        },
        "required": [
          "friendlyName"
        ],
        "type": "object"
      },
      "RepositoryBuildRequest": {
        "description": "Description of a new repository build.",
        "properties": {
          "file_id": {
            "description": "The file id that was generated when the build spec was uploaded",
            "type": "string"
          },
          "archive_url": {
            "description": "The URL of the .tar.gz to build. Must start with \"http\" or \"https\".",
            "type": "string"
          },
          "subdirectory": {
            "description": "Subdirectory in which the Dockerfile can be found. You can only specify this or dockerfile_path",
            "type": "string"
          },
          "dockerfile_path": {
            "description": "Path to a dockerfile. You can only specify this or subdirectory.",
            "type": "string"
          },
          "context": {
            "description": "Pass in the context for the dockerfile. This is optional.",
            "type": "string"
          },
          "pull_robot": {
            "description": "Username of a Quay robot account to use as pull credentials",
            "type": "string"
          },
          "docker_tags": {
            "description": "The tags to which the built images will be pushed. If none specified, \"latest\" is used.",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "ApiErrorDescription": {
        "description": "Description of an error",
        "properties": {
          "type": {
            "description": "A reference to the error type resource",
            "type": "string"
          },
          "title": {
            "description": "The title of the error. Can be used to uniquely identify the kind of error.",
            "enum": [
              "external_service_timeout",
              "invalid_request",
              "invalid_response",
              "invalid_token",
              "expired_token",
              "insufficient_scope",
              "fresh_login_required",
              "exceeds_license",
              "not_found",
              "downstream_issue"
            ],
            "type": "string"
          },
          "description": {
            "description": "A more detailed description of the error that may include help for fixing the issue.",
            "type": "string"
          }
        },
        "required": [
          "description",
          "title",
          "type"
        ],
        "type": "object"
      },
      "CreateMessage": {
        "description": "Create a new message",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/CreateMessage_message"
          }
        },
        "type": "object"
      },
      "ExportLogs": {
        "description": "Configuration for an export logs operation",
        "properties": {
          "callback_url": {
            "description": "The callback URL to invoke with a link to the exported logs",
            "type": "string"
          },
          "callback_email": {
            "description": "The e-mail address at which to e-mail a link to the exported logs",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddLabel": {
        "description": "Adds a label to a manifest",
        "properties": {
          "key": {
            "description": "The key for the label",
            "type": "string"
          },
          "value": {
            "description": "The value for the label",
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "type": "object"
      },
      "NewOrgQuota": {
        "description": "Description of a new organization quota",
        "properties": {
          "limit_bytes": {
            "description": "Number of bytes the organization is allowed",
            "type": "integer"
          }
        },
        "required": [
          "limit_bytes"
        ],
        "type": "object"
      },
      "UpdateOrgQuota": {
        "description": "Description of a new organization quota",
        "properties": {
          "limit_bytes": {
            "description": "Number of bytes the organization is allowed",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NewOrgQuotaLimit": {
        "description": "Description of a new organization quota limit",
        "properties": {
          "type": {
            "description": "Type of quota limit: \"Warning\" or \"Reject\"",
            "type": "string"
          },
          "threshold_percent": {
            "description": "Quota threshold, in percent of quota",
            "type": "integer"
          }
        },
        "required": [
          "threshold_percent",
          "type"
        ],
        "type": "object"
      },
      "UpdateOrgQuotaLimit": {
        "description": "Description of changing organization quota limit",
        "properties": {
          "type": {
            "description": "Type of quota limit: \"Warning\" or \"Reject\"",
            "type": "string"
          },
          "threshold_percent": {
            "description": "Quota threshold, in percent of quota",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NewUser": {
        "description": "Fields which must be specified for a new user.",
        "properties": {
          "username": {
            "description": "The user's username",
            "type": "string"
          },
          "password": {
            "description": "The user's password",
            "type": "string"
          },
          "email": {
            "description": "The user's email address",
            "type": "string"
          },
          "invite_code": {
            "description": "The optional invite code",
            "type": "string"
          },
          "recaptcha_response": {
            "description": "The (may be disabled) recaptcha response code for verification",
            "type": "string"
          }
        },
        "required": [
          "password",
          "username"
        ],
        "type": "object"
      },
      "UpdateUser": {
        "description": "Fields which can be updated in a user.",
        "properties": {
          "password": {
            "description": "The user's password",
            "type": "string"
          },
          "invoice_email": {
            "description": "Whether the user desires to receive an invoice email.",
            "type": "boolean"
          },
          "email": {
            "description": "The user's email address",
            "type": "string"
          },
          "tag_expiration_s": {
            "description": "The number of seconds for tag expiration",
            "minimum": 0,
            "type": "integer"
          },
          "username": {
            "description": "The user's username",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserView": {
        "description": "Describes a user",
        "properties": {
          "verified": {
            "description": "Whether the user's email address has been verified",
            "type": "boolean"
          },
          "anonymous": {
            "description": "true if this user data represents a guest user",
            "type": "boolean"
          },
          "email": {
            "description": "The user's email address",
            "type": "string"
          },
          "avatar": {
            "description": "Avatar data representing the user's icon",
            "properties": {},
            "type": "object"
          },
          "organizations": {
            "description": "Information about the organizations in which the user is a member",
            "items": {
              "properties": {},
              "type": "object"
            },
            "type": "array"
          },
          "logins": {
            "description": "The list of external login providers against which the user has authenticated",
            "items": {
              "properties": {},
              "type": "object"
            },
            "type": "array"
          },
          "can_create_repo": {
            "description": "Whether the user has permission to create repositories",
            "type": "boolean"
          },
          "preferred_namespace": {
            "description": "If true, the user's namespace is the preferred namespace to display",
            "type": "boolean"
          }
        },
        "required": [
          "anonymous",
          "avatar"
        ],
        "type": "object"
      },
      "NewStarredRepository": {
        "properties": {
          "namespace": {
            "description": "Namespace in which the repository belongs",
            "type": "string"
          },
          "repository": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "repository"
        ],
        "type": "object"
      },
      "NewOrg": {
        "description": "Description of a new organization.",
        "properties": {
          "name": {
            "description": "Organization username",
            "type": "string"
          },
          "email": {
            "description": "Organization contact email",
            "type": "string"
          },
          "recaptcha_response": {
            "description": "The (may be disabled) recaptcha response code for verification",
            "type": "string"
          }
        },
        "required": [
          "name",
          "email"
        ],
        "type": "object"
      },
      "UpdateOrg": {
        "description": "Description of updates for an organization",
        "properties": {
          "name": {
            "description": "The new name for the organization",
            "type": "string"
          },
          "email": {
            "description": "Organization contact email",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NewApp": {
        "description": "Description of a new organization application.",
        "properties": {
          "name": {
            "description": "The name of the application",
            "type": "string"
          },
          "redirect_uri": {
            "description": "The URI for the application's OAuth redirect",
            "type": "string"
          },
          "application_uri": {
            "description": "The URI for the application's homepage",
            "type": "string"
          },
          "description": {
            "description": "The human-readable description for the application",
            "type": "string"
          },
          "avatar_email": {
            "description": "The e-mail address of the avatar to use for the application",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "UpdateApp": {
        "description": "Description of an updated application.",
        "properties": {
          "name": {
            "description": "The name of the application",
            "type": "string"
          },
          "redirect_uri": {
            "description": "The URI for the application's OAuth redirect",
            "type": "string"
          },
          "application_uri": {
            "description": "The URI for the application's homepage",
            "type": "string"
          },
          "description": {
            "description": "The human-readable description for the application",
            "type": "string"
          },
          "avatar_email": {
            "description": "The e-mail address of the avatar to use for the application",
            "type": "string"
          }
        },
        "required": [
          "application_uri",
          "name",
          "redirect_uri"
        ],
        "type": "object"
      },
      "UserPermission": {
        "description": "Description of a user permission.",
        "properties": {
          "role": {
            "description": "Role to use for the user",
            "enum": [
              "read",
              "write",
              "admin"
            ],
            "type": "string"
          }
        },
        "required": [
          "role"
        ],
        "type": "object"
      },
      "TeamPermission": {
        "description": "Description of a team permission.",
        "properties": {
          "role": {
            "description": "Role to use for the team",
            "enum": [
              "read",
              "write",
              "admin"
            ],
            "type": "string"
          }
        },
        "required": [
          "role"
        ],
        "type": "object"
      },
      "NewPrototype": {
        "description": "Description of a new prototype",
        "properties": {
          "role": {
            "description": "Role that should be applied to the delegate",
            "enum": [
              "read",
              "write",
              "admin"
            ],
            "type": "string"
          },
          "activating_user": {
            "$ref": "#/components/schemas/NewPrototype_activating_user"
          },
          "delegate": {
            "$ref": "#/components/schemas/NewPrototype_delegate"
          }
        },
        "required": [
          "delegate",
          "role"
        ],
        "type": "object"
      },
      "PrototypeUpdate": {
        "description": "Description of a the new prototype role",
        "properties": {
          "role": {
            "description": "Role that should be applied to the permission",
            "enum": [
              "read",
              "write",
              "admin"
            ],
            "type": "string"
          }
        },
        "required": [
          "role"
        ],
        "type": "object"
      },
      "NewRepo": {
        "description": "Description of a new repository",
        "properties": {
          "repository": {
            "description": "Repository name",
            "type": "string"
          },
          "visibility": {
            "description": "Visibility which the repository will start with",
            "enum": [
              "public",
              "private"
            ],
            "type": "string"
          },
          "namespace": {
            "description": "Namespace in which the repository should be created. If omitted, the username of the caller is used",
            "type": "string"
          },
          "description": {
            "description": "Markdown encoded description for the repository",
            "type": "string"
          }
        },
        "required": [
          "description",
          "repository",
          "visibility"
        ],
        "type": "object"
      },
      "RepoUpdate": {
        "description": "Fields which can be updated in a repository.",
        "properties": {
          "description": {
            "description": "Markdown encoded description for the repository",
            "type": "string"
          }
        },
        "required": [
          "description"
        ],
        "type": "object"
      },
      "ChangeVisibility": {
        "description": "Change the visibility for the repository.",
        "properties": {
          "visibility": {
            "description": "Visibility which the repository will start with",
            "enum": [
              "public",
              "private"
            ],
            "type": "string"
          }
        },
        "required": [
          "visibility"
        ],
        "type": "object"
      },
      "NotificationCreateRequest": {
        "description": "Information for creating a notification on a repository",
        "properties": {
          "event": {
            "description": "The event on which the notification will respond",
            "type": "string"
          },
          "method": {
            "description": "The method of notification (such as email or web callback)",
            "type": "string"
          },
          "config": {
            "description": "JSON config information for the specific method of notification",
            "properties": {},
            "type": "object"
          },
          "eventConfig": {
            "description": "JSON config information for the specific event of notification",
            "properties": {},
            "type": "object"
          },
          "title": {
            "description": "The human-readable title of the notification",
            "type": "string"
          }
        },
        "required": [
          "config",
          "event",
          "eventConfig",
          "method"
        ],
        "type": "object"
      },
      "TokenPermission": {
        "description": "Description of a token permission",
        "properties": {
          "role": {
            "description": "Role to use for the token",
            "enum": [
              "read",
              "write",
              "admin"
            ],
            "type": "string"
          }
        },
        "required": [
          "role"
        ],
        "type": "object"
      },
      "CreateRobot": {
        "description": "Optional data for creating a robot",
        "properties": {
          "description": {
            "description": "Optional text description for the robot",
            "maxLength": 255,
            "type": "string"
          },
          "unstructured_metadata": {
            "description": "Optional unstructured metadata for the robot",
            "properties": {},
            "type": "object"
          }
        },
        "type": "object"
      },
      "NewNamespaceQuota": {
        "description": "Description of a new organization quota",
        "properties": {
          "limit_bytes": {
            "description": "Number of bytes the organization is allowed",
            "type": "integer"
          }
        },
        "required": [
          "limit_bytes"
        ],
        "type": "object"
      },
      "UpdateNamespaceQuota": {
        "description": "Description of a new organization quota",
        "properties": {
          "limit_bytes": {
            "description": "Number of bytes the organization is allowed",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CreateInstallUser": {
        "description": "Data for creating a user",
        "properties": {
          "username": {
            "description": "The username of the user being created",
            "type": "string"
          },
          "email": {
            "description": "The email address of the user being created",
            "type": "string"
          }
        },
        "required": [
          "username"
        ],
        "type": "object"
      },
      "CreateServiceKey": {
        "description": "Description of creation of a service key",
        "properties": {
          "service": {
            "description": "The service authenticating with this key",
            "type": "string"
          },
          "name": {
            "description": "The friendly name of a service key",
            "type": "string"
          },
          "metadata": {
            "description": "The key/value pairs of this key's metadata",
            "properties": {},
            "type": "object"
          },
          "notes": {
            "description": "If specified, the extra notes for the key",
            "type": "string"
          },
          "expiration": {
            "description": "The expiration date as a unix timestamp",
            "type": "object"
          }
        },
        "required": [
          "expiration",
          "service"
        ],
        "type": "object"
      },
      "PutServiceKey": {
        "description": "Description of updates for a service key",
        "properties": {
          "name": {
            "description": "The friendly name of a service key",
            "type": "string"
          },
          "metadata": {
            "description": "The key/value pairs of this key's metadata",
            "properties": {},
            "type": "object"
          },
          "expiration": {
            "description": "The expiration date as a unix timestamp",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ApproveServiceKey": {
        "description": "Information for approving service keys",
        "properties": {
          "notes": {
            "description": "Optional approval notes",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChangeTag": {
        "description": "Makes changes to a specific tag",
        "type": "object"
      },
      "RestoreTag": {
        "description": "Restores a tag to a specific image",
        "properties": {
          "manifest_digest": {
            "description": "If specified, the manifest digest that should be used",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TeamDescription": {
        "description": "Description of a team",
        "properties": {
          "role": {
            "description": "Org wide permissions that should apply to the team",
            "enum": [
              "member",
              "creator",
              "admin"
            ],
            "type": "string"
          },
          "description": {
            "description": "Markdown description for the team",
            "type": "string"
          }
        },
        "required": [
          "role"
        ],
        "type": "object"
      },
      "UpdateTrigger": {
        "description": "Options for updating a build trigger",
        "properties": {
          "enabled": {
            "description": "Whether the build trigger is enabled",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "BuildTriggerActivateRequest": {
        "properties": {
          "config": {
            "description": "Arbitrary json.",
            "properties": {},
            "type": "object"
          },
          "pull_robot": {
            "description": "The name of the robot that will be used to pull images.",
            "type": "string"
          }
        },
        "required": [
          "config"
        ],
        "type": "object"
      },
      "RunParameters": {
        "additionalProperties": false,
        "description": "Optional run parameters for activating the build trigger",
        "properties": {
          "branch_name": {
            "description": "(SCM only) If specified, the name of the branch to build.",
            "type": "string"
          },
          "commit_sha": {
            "description": "(Custom Only) If specified, the ref/SHA1 used to checkout a git repository.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateMessage_message": {
        "description": "A single message",
        "properties": {
          "content": {
            "description": "The actual message",
            "type": "string"
          },
          "media_type": {
            "description": "The media type of the message",
            "enum": [
              "text/plain",
              "text/markdown"
            ],
            "type": "string"
          },
          "severity": {
            "description": "The severity of the message",
            "enum": [
              "info",
              "warning",
              "error"
            ],
            "type": "string"
          }
        },
        "required": [
          "content",
          "media_type",
          "severity"
        ],
        "type": "object"
      },
      "NewPrototype_activating_user": {
        "description": "Repository creating user to whom the rule should apply",
        "properties": {
          "name": {
            "description": "The username for the activating_user",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "NewPrototype_delegate": {
        "description": "Information about the user or team to which the rule grants access",
        "properties": {
          "name": {
            "description": "The name for the delegate team or user",
            "type": "string"
          },
          "kind": {
            "description": "Whether the delegate is a user or a team",
            "enum": [
              "user",
              "team"
            ],
            "type": "string"
          }
        },
        "required": [
          "kind",
          "name"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "oauth2_implicit": {
        "flows": {
          "implicit": {
            "authorizationUrl": "https://quay.example.com/oauth/authorize",
            "scopes": {
              "repo:read": "This application will be able to view and pull all repositories visible to the granting user or robot account",
              "repo:write": "This application will be able to view, push and pull to all repositories to which the granting user or robot account has write access",
              "repo:admin": "This application will have administrator access to all repositories to which the granting user or robot account has access",
              "repo:create": "This application will be able to create repositories in to any namespaces that the granting user or robot account is allowed to create repositories",
              "user:read": "This application will be able to read user information such as username and email address.",
              "org:admin": "This application will be able to administer your organizations including creating robots, creating teams, adjusting team membership, and changing billing settings. You should have absolute trust in the requesting application before granting this permission.",
              "super:user": "This application will be able to administer your installation including managing users, managing organizations and other features found in the superuser panel. You should have absolute trust in the requesting application before granting this permission.",
              "user:admin": "This application will be able to administer your account including creating robots and granting them permissions to your repositories. You should have absolute trust in the requesting application before granting this permission."
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "x-original-swagger-version": "2.0"
}